<?xml version='1.0'?>

<launch>

  <env name="GAZEBO_MODEL_PATH" value="$(optenv GAZEBO_MODEL_PATH):$(find evo_robot_sim)/gazebo/models"/>
  <!-- NOTE: Values set using the <env> tag will not be seen by $(env ...), so the <env> tag cannot be used to parametrize launch files.  -->

  <include file="$(find evo_robot_sim)/launch/empty_world.launch" />

  <param name="robot_description" command="$(find xacro)/xacro --xacro-ns $(find evo_robot_sim)/urdf/main.xacro"/>

  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model evorobot -x 0 -y 0 -z 0.5" output="screen"/>

  <rosparam file="$(find evo_robot_sim)/config/controllers.yaml" command="load"/>

  <node name="control_spawn" pkg="controller_manager" type="spawner" respawn="false" ns="evo_robot"
    output="screen" 
    args="joint_state_controller wheel_fl_controller wheel_fr_controller wheel_bl_controller wheel_br_controller"/>
    
    <!-- "joint_state_controller wheel_fl_controller wheel_fr_controller wheel_bl_controller wheel_br_controller roller_fl_controller roller_fr_controller roller_bl_controller roller_br_controller lift_fl_controller lift_fr_controller lift_bl_controller lift_br_controller" -->
  
  <node name="robot_state_publisher" ns="evo_robot" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
    <!-- <param name="use_tf_static" value="false"/>
    <param name="ignore_timestamp" value="true"/> -->
    <remap from="/joint_states" to="/evo_robot/joint_states"/>
    <!-- <remap from="/cmd_vel" to="/root_cmd_vel"/> -->

    <!-- TODO rate angeben-->
  </node>

  <include file="$(find evo_twist_mux)/launch/twist_mux.launch" />
  
  <include file="$(find evo_robot_sim)/launch/control.launch" />
  <include file="$(find evo_robot_sim)/launch/control_ps4.launch" />
  <!-- <include file="$(find evo_robot_sim)/launch/control_procon.launch" /> -->

</launch>
